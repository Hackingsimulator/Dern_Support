{"ast":null,"code":"var _jsxFileName = \"/Users/sajedhussein/Documents/btecc_code/Frontend/demo-project updated/src/Components/ScheduleRepair.js\",\n  _s = $RefreshSig$();\n// ScheduleRepair.js\nimport React, { useState } from 'react';\nimport { Button, Modal, Form, Input, DatePicker, message } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScheduleRepair = ({\n  fetchScheduledRepairs\n}) => {\n  _s();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n\n  // Function to show the modal\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  // Function to handle modal cancel\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    form.resetFields(); // Reset form fields when modal is closed\n  };\n\n  // Function to handle form submission and post to the backend\n  const onFinish = async values => {\n    try {\n      console.log('Form Values:', values);\n      const repairData = {\n        Title: values.title,\n        Description: values.description,\n        RepairDate: values.repairDate.toISOString()\n      };\n      console.log('Formatted Repair Data:', repairData);\n      const account = JSON.parse(localStorage.getItem('account') || '{}');\n      if (!account || !account.token) {\n        message.error('Authorization token is missing. Please log in.');\n        return;\n      }\n      console.log('Making API Request...');\n\n      // Send POST request to backend\n      const response = await axios.post('http://localhost:5235/api/ScheduledRepairs/schedule', repairData, {\n        headers: {\n          Authorization: `Bearer ${account.token}`\n        }\n      });\n      console.log('Backend Response:', response.data);\n      message.success('Repair scheduled successfully!');\n      setIsModalVisible(false);\n      form.resetFields();\n\n      // Refresh the appointments list\n      if (fetchScheduledRepairs) {\n        fetchScheduledRepairs();\n      }\n    } catch (error) {\n      console.error('Error scheduling repair:', error);\n      if (error.response && error.response.data) {\n        console.error('Error Response Data:', error.response.data);\n        message.error(`Failed to schedule repair: ${error.response.data}`);\n      } else if (error.request) {\n        console.error('Error Request:', error.request);\n        message.error('No response received from the server.');\n      } else {\n        console.error('Error Message:', error.message);\n        message.error(`Error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Schedule Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Schedule Repair Appointment\",\n      open: isModalVisible,\n      onCancel: handleCancel,\n      footer: null,\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        onFinish: onFinish,\n        initialValues: {\n          repairDate: moment() // Default date to today\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Title\",\n          name: \"title\",\n          rules: [{\n            required: true,\n            message: 'Please input the title!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter the title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Description\",\n          name: \"description\",\n          rules: [{\n            required: true,\n            message: 'Please input the description!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            placeholder: \"Enter a brief description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Select Date and Time\",\n          name: \"repairDate\",\n          rules: [{\n            required: true,\n            message: 'Please select date and time!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            showTime: true,\n            format: \"YYYY-MM-DD HH:mm:ss\",\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            block: true,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ScheduleRepair, \"6bjsG0RjRxniBaT7pyWiA4V8XKA=\", false, function () {\n  return [Form.useForm];\n});\n_c = ScheduleRepair;\nScheduleRepair.propTypes = {\n  fetchScheduledRepairs: PropTypes.func\n};\nexport default ScheduleRepair;\nvar _c;\n$RefreshReg$(_c, \"ScheduleRepair\");","map":{"version":3,"names":["React","useState","Button","Modal","Form","Input","DatePicker","message","axios","moment","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","ScheduleRepair","fetchScheduledRepairs","_s","isModalVisible","setIsModalVisible","form","useForm","showModal","handleCancel","resetFields","onFinish","values","console","log","repairData","Title","title","Description","description","RepairDate","repairDate","toISOString","account","JSON","parse","localStorage","getItem","token","error","response","post","headers","Authorization","data","success","request","children","type","onClick","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","open","onCancel","footer","destroyOnClose","layout","initialValues","Item","label","name","rules","required","placeholder","TextArea","showTime","format","width","htmlType","block","_c","propTypes","func","$RefreshReg$"],"sources":["/Users/sajedhussein/Documents/btecc_code/Frontend/demo-project updated/src/Components/ScheduleRepair.js"],"sourcesContent":["// ScheduleRepair.js\nimport React, { useState } from 'react';\nimport { Button, Modal, Form, Input, DatePicker, message } from 'antd';\nimport axios from 'axios';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nconst ScheduleRepair = ({ fetchScheduledRepairs }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n\n  // Function to show the modal\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  // Function to handle modal cancel\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    form.resetFields(); // Reset form fields when modal is closed\n  };\n\n  // Function to handle form submission and post to the backend\n  const onFinish = async (values) => {\n    try {\n      console.log('Form Values:', values);\n\n      const repairData = {\n        Title: values.title,\n        Description: values.description,\n        RepairDate: values.repairDate.toISOString(),\n      };\n\n      console.log('Formatted Repair Data:', repairData);\n\n      const account = JSON.parse(localStorage.getItem('account') || '{}');\n      if (!account || !account.token) {\n        message.error('Authorization token is missing. Please log in.');\n        return;\n      }\n\n      console.log('Making API Request...');\n\n      // Send POST request to backend\n      const response = await axios.post(\n        'http://localhost:5235/api/ScheduledRepairs/schedule',\n        repairData,\n        {\n          headers: {\n            Authorization: `Bearer ${account.token}`,\n          },\n        }\n      );\n\n      console.log('Backend Response:', response.data);\n      message.success('Repair scheduled successfully!');\n      setIsModalVisible(false);\n      form.resetFields();\n\n      // Refresh the appointments list\n      if (fetchScheduledRepairs) {\n        fetchScheduledRepairs();\n      }\n    } catch (error) {\n      console.error('Error scheduling repair:', error);\n      if (error.response && error.response.data) {\n        console.error('Error Response Data:', error.response.data);\n        message.error(`Failed to schedule repair: ${error.response.data}`);\n      } else if (error.request) {\n        console.error('Error Request:', error.request);\n        message.error('No response received from the server.');\n      } else {\n        console.error('Error Message:', error.message);\n        message.error(`Error: ${error.message}`);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal} style={{ marginTop: '10px' }}>\n        Schedule Now\n      </Button>\n\n      {/* Modal for scheduling repair */}\n      <Modal\n        title=\"Schedule Repair Appointment\"\n        open={isModalVisible}\n        onCancel={handleCancel}\n        footer={null}\n        destroyOnClose={true}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={onFinish}\n          initialValues={{\n            repairDate: moment(), // Default date to today\n          }}\n        >\n          <Form.Item\n            label=\"Title\"\n            name=\"title\"\n            rules={[{ required: true, message: 'Please input the title!' }]}\n          >\n            <Input placeholder=\"Enter the title\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Description\"\n            name=\"description\"\n            rules={[{ required: true, message: 'Please input the description!' }]}\n          >\n            <Input.TextArea placeholder=\"Enter a brief description\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Select Date and Time\"\n            name=\"repairDate\"\n            rules={[{ required: true, message: 'Please select date and time!' }]}\n          >\n            <DatePicker\n              showTime\n              format=\"YYYY-MM-DD HH:mm:ss\"\n              style={{ width: '100%' }}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nScheduleRepair.propTypes = {\n  fetchScheduledRepairs: PropTypes.func,\n};\n\nexport default ScheduleRepair;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}